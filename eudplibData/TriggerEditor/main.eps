import PluginVariables as msqcvar;
/*================Start Import================*/
/*================End Import================*/
/*================Start Var================*/
/*================End Var================*/
function ClassicTriggerExec(){
    const _origcp = getcurpl();
    /*================Start Player 1================*/
    if (playerexist(0))
    {
        setcurpl(0);
        const cp = 0;
        
        {

                SetMemory(0x66EC48 + 967 * 4, 7, 217);
                SetMemory(0x66EC48 + 967 * 4, 7, 389);
                SetMemoryXEPD(EPD(0x666160 + 306 * 2), 7, 967, 0xFFFF);
        }
        {

                MemoryEPD(EPD(msqcvar.VKeyDown_F) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_ENTER) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_0) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_1) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_2) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_3) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_4) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_5) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_6) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_7) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_8) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_9) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_SP21) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_SP3) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_W) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_Z) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyDown_X) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_LSHIFT) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VMouseDown_L) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_ENTER) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_F) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_G) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_SP1) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_E) + 0, Exactly, 1);
        }
        {

                MemoryEPD(EPD(msqcvar.VKeyPress_SP5) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_B) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_C) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_SP6) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_E) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_F) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_G) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_H) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_I) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_J) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_K) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_L) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_SP3) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_SP1) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_O) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_SP4) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_Q) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_R) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_S) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_T) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_SP2) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_V) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_W) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_X) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_Y) + 0, Exactly, 1);
                MemoryEPD(EPD(msqcvar.VKeyPress_Z) + 0, Exactly, 1);
        }
    }
    /*================End Player 1================*/
    setcurpl(_origcp);
}
